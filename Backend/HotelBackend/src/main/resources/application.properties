spring.application.name=HotelBackend

# Google OAuth2 Client Configuration
spring.security.oauth2.client.registration.google.client-id=935922482776-l5ie6q2jh6j19rmac546o9bkgqpdnvrf.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google

# Google OAuth2 Provider Configuration
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://openidconnect.googleapis.com/v1/userinfo


#DB
spring.datasource.url=jdbc:postgresql://localhost:5432/hotel_db
spring.datasource.username=postgres
spring.datasource.password=Babyyoda2005
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.hibernate.ddl-auto=update

app.cliente.url=http://localhost:4200


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.servlet.multipart.max-file-size=50MB
spring.servlet.multipart.max-request-size=50MB


# Spring Security
# spring.security.user.name=admin
#spring.security.user.password=1234


# Swagger
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true